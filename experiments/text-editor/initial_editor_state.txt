export class ParseContext {
    tokens = [];
    raw = "";
    idx = 0;

    constructor(inp) {
        this.raw = inp;
    }
}

const isAlpha = (c) => {
    return (
        (c >= 'a' && c <= 'z') ||
        (c >= 'A' && c <= 'Z') ||
        (c >= '0' && c <= '9'));
}

const isWhitespace = (c) => {
    return (c === '\n' || c === ' ' || c === '\t');
}

const parseWhileChar = (charCond) => (ctx) => {
    const startIndex = ctx.idx;
    let endIndex = startIndex;
    while (charCond(ctx.raw[endIndex]) && ctx.raw[endIndex] !== undefined) {
        endIndex++;
    }

    if (endIndex > startIndex) {
        return {
            start: startIndex,
            end: endIndex
        };
    }
}
