async function start() {
    const canvas = document.querySelector("#canvas");
    const errorText = document.querySelector("#errors");

    function logError(error) {
        errorText.innerHTML = error;
    }

    const memory = new WebAssembly.Memory({
        initial: 200
    });

    // Each HEAP is simply a different "view" into the memory.
    let HEAP8 = new Int8Array(memory.buffer);
    let HEAPU8 = new Uint8Array(memory.buffer);
    let HEAP16 = new Int16Array(memory.buffer);
    let HEAPU16 = new Uint16Array(memory.buffer);
    let HEAP32 = new Uint32Array(memory.buffer);
    let HEAPU32 = new Uint32Array(memory.buffer);
    let HEAPF32 = new Float32Array(memory.buffer);
    let HEAPF64 = new Float64Array(memory.buffer);

    let toUtf8Decoder = new TextDecoder( "utf-8" );
    function toUTF8(ptr) {
        // Remember, in C strings are null terminated strings.
        // Argument is a pointer to the first character.
        // Iterate and find null.
        // This is almost directly copied from rawdraw.
        let len = 0;
        for(let i = ptr; HEAPU8[i] != 0; i++) len++;
        return toUtf8Decoder.decode(HEAPU8.subarray(ptr, ptr+len));
    }

    const imports = {
        env: {
            memory,
            random: Math.random,
            cos: Math.cos,
            sin: Math.sin,
            tan: Math.tan,
            prints: (ptr) => console.log(ptr, toUTF8(ptr)),
            printfl: (f) => console.log(f),
        }
    };

    // instantiateStreaming is not supported by mobile safari
    const wasmResponse = await fetch('main.wasm');
    const wasmArray = await wasmResponse.arrayBuffer();
    const { instance } = await WebAssembly.instantiate(
        wasmArray,
        imports
    );

    window.onmousemove = function(e) {
        instance.exports.setCursorPosition(e.clientX, e.clientY);
    }

    window.onmousedown = function(e) {
	instance.exports.onMouseDown();
    }

    window.onmouseup = function(e) {
	instance.exports.onMouseUp();
    }
}

window.onload = function() {
    start();
};
